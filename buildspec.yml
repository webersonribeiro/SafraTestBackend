version: 0.2

stages:
  - build
  - deploy

env:
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

build_production:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:5.0
  script:
    - apt-get update
    - apt-get install zip -y
    - dotnet restore
    - dotnet publish -c Release -o site
    - cd 'site'
    - rm -f appsettings.Development.json
    - zip -r $CI_PIPELINE_ID.zip *
  artifacts:
    paths:
    - site/$CI_PIPELINE_ID.zip
    expire_in: 1 day
  only:
    - master

deploy_production:
  image: python:latest
  stage: deploy
  script:
    - pip install awscli
    - aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
    - aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
    - aws configure set region ${{ env.AWS_REGION }}
    - aws s3 sync ./site/ s3://${{ env.AWS_S3_BUCKET }}
    - aws elasticbeanstalk create-application-version --application-name $APPLICATION_NAME --version-label $CI_PIPELINE_ID --description $CI_COMMIT_TIMESTAMP --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=versao-api/$CI_PIPELINE_ID.zip
    - aws elasticbeanstalk update-environment --application-name $APPLICATION_NAME --environment-name $ENVIRONMENT_NAME --version-label $CI_PIPELINE_ID
  only:
    - main
